Fix bugs:


Complete the implementation:
o Optimisations
o Fix algebraic type implementation to use tagged pointers


Improve error handling:
o Give meaningful message for errors detected in generated procs
o Detect and report use of uninitialised variables, including update
   of uninitialised variables


Complete the language:
o Provide switch-on-constructor syntax and implementation
o Fix the syntax!
    o At statement level, support interleaved operator value syntax,
      eg, "f v g w h x", which would be read as f__g__h(v,w,x)
    o At expression level, support infix ops, where the ops are sequences of
      operator characters
    o At statement level, support brace-enclosed statement sequence as statement
    o Interpolation (string and array)
        o "...@foo..." = "..." ++ foo ++ "..."
	o "...@(foo(bar,baz))..." = "..." ++ foo(bar,baz) ++ "..."
	o [foo,@bar(baz),zip] = [foo] ++ bar(baz) ++ [zip]
	o if ++ can run backwards, then [?foo,@?bar] and [@?foo,bar] can be patterns
	o with this, no need for [ ... | ...] syntax
o Support polymorphism
o Support subtypes
o Support higher-order programming
o Support declared laziness
o Support optional and named arguments


Optimise:
o Remove unneeded input and unchanged output arguments
o Inter-procedure common sub-expression elimination
o Code hoisting
o Destructive update transformation (CTGC)


Blocks:
o Improve Logging to be distributable
o add Procedure id for global module level procedures
o Insert target triple into the definition of LLVMAST.Module during
  creation.

Emit:
o Improve Logging

Make:
o Add creation of cabal sandbox and dependency install 
