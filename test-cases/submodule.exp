======================================================================
AFTER EVERYTHING:
 Module submodule
  public submods  : 
  public types    : 
  public resources: 
  public procs    : submodule.publictest.visible<0>
  imports         : use submodule.privatetest
                    public use submodule.publictest
                    use wybe
  types           : 
  resources       : 
  procs           : 

  LLVM code       :

; ModuleID = 'submodule'


declare external ccc i8* @wybe_malloc(i32)

declare external ccc void @print_string(i8*)

@submodule.privatetest.1 = constant [33 x i8] c"private proc in a private module\00"

@submodule.privatetest.2 = constant [32 x i8] c"public proc in a private module\00"

define external ccc void @"submodule.privatetest.hidden<0>"(){
entry:
  tail call ccc void @print_string(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @submodule.privatetest.1, i32 0, i32 0))
  ret void
}

define external ccc void @"submodule.privatetest.semi_hidden<0>"(){
entry:
  tail call ccc void @print_string(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @submodule.privatetest.2, i32 0, i32 0))
  ret void
}

@submodule.publictest.1 = constant [32 x i8] c"private proc in a public module\00"

@submodule.publictest.2 = constant [31 x i8] c"public proc in a public module\00"

define external ccc void @"submodule.publictest.semi_visible<0>"(){
entry:
  tail call ccc void @print_string(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @submodule.publictest.1, i32 0, i32 0))
  ret void
}

define external ccc void @"submodule.publictest.visible<0>"(){
entry:
  tail call ccc void @print_string(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @submodule.publictest.2, i32 0, i32 0))
  ret void
}
  submodules      : submodule.privatetest, submodule.publictest
--------------------------------------------------
 Module submodule.privatetest
  public submods  : 
  public types    : 
  public resources: 
  public procs    : submodule.privatetest.semi_hidden<0>
  imports         : use submodule
                    use wybe
  types           : 
  resources       : 
  procs           : 

hidden > inline (0 calls)
0: hidden(wybe.io$io#0:wybe.phantom, ?wybe.io$io#1:wybe.phantom):
    foreign c print_string("private proc in a private module":wybe.string, ~#wybe.io$io#0:wybe.phantom, ?#wybe.io$io#1:wybe.phantom) @wybe:93:41


semi_hidden > public inline (0 calls)
0: semi_hidden(wybe.io$io#0:wybe.phantom, ?wybe.io$io#1:wybe.phantom):
    foreign c print_string("public proc in a private module":wybe.string, ~#wybe.io$io#0:wybe.phantom, ?#wybe.io$io#1:wybe.phantom) @wybe:93:41
  LLVM code       :

; ModuleID = 'submodule.privatetest'


declare external ccc void @print_string(i8*)

@submodule.privatetest.1 = constant [33 x i8] c"private proc in a private module\00"

@submodule.privatetest.2 = constant [32 x i8] c"public proc in a private module\00"

declare external ccc i8* @wybe_malloc(i32)

define external ccc void @"submodule.privatetest.hidden<0>"(){
entry:
  tail call ccc void @print_string(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @submodule.privatetest.1, i32 0, i32 0))
  ret void
}

define external ccc void @"submodule.privatetest.semi_hidden<0>"(){
entry:
  tail call ccc void @print_string(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @submodule.privatetest.2, i32 0, i32 0))
  ret void
}
--------------------------------------------------
 Module submodule.publictest
  public submods  : 
  public types    : 
  public resources: 
  public procs    : submodule.publictest.visible<0>
  imports         : use submodule
                    use wybe
  types           : 
  resources       : 
  procs           : 

semi_visible > inline (0 calls)
0: semi_visible(wybe.io$io#0:wybe.phantom, ?wybe.io$io#1:wybe.phantom):
    foreign c print_string("private proc in a public module":wybe.string, ~#wybe.io$io#0:wybe.phantom, ?#wybe.io$io#1:wybe.phantom) @wybe:93:41


visible > public inline (0 calls)
0: visible(wybe.io$io#0:wybe.phantom, ?wybe.io$io#1:wybe.phantom):
    foreign c print_string("public proc in a public module":wybe.string, ~#wybe.io$io#0:wybe.phantom, ?#wybe.io$io#1:wybe.phantom) @wybe:93:41
  LLVM code       :

; ModuleID = 'submodule.publictest'


declare external ccc void @print_string(i8*)

@submodule.publictest.1 = constant [32 x i8] c"private proc in a public module\00"

@submodule.publictest.2 = constant [31 x i8] c"public proc in a public module\00"

declare external ccc i8* @wybe_malloc(i32)

define external ccc void @"submodule.publictest.semi_visible<0>"(){
entry:
  tail call ccc void @print_string(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @submodule.publictest.1, i32 0, i32 0))
  ret void
}

define external ccc void @"submodule.publictest.visible<0>"(){
entry:
  tail call ccc void @print_string(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @submodule.publictest.2, i32 0, i32 0))
  ret void
}
