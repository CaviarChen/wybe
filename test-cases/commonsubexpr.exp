======================================================================
AFTER EVERYTHING:
 Module commonsubexpr
  public submods  : 
  public types    : 
  public resources: 
  public procs    : commonsubexpr.<0>
  imports         : use wybe
  types           : 
  resources       : 
  procs           : 

*main* > public inline (0 calls)
0: (wybe.io$io#0:wybe.phantom, ?wybe.io$io#1:wybe.phantom):
    foreign c putchar('\n':wybe.char, ~#wybe.io$io#0:wybe.phantom, ?tmp$2#0:wybe.phantom) @wybe:73:28
    foreign c putchar('\n':wybe.char, ~tmp$2#0:wybe.phantom, ?#wybe.io$io#1:wybe.phantom) @wybe:73:28


common_subexpr > inline (1 calls)
0: common_subexpr([x#0:wybe.int], wybe.io$io#0:wybe.phantom, ?wybe.io$io#2:wybe.phantom):
    foreign c putchar('\n':wybe.char, ~#wybe.io$io#0:wybe.phantom, ?#wybe.io$io#1:wybe.phantom) @wybe:73:28
    foreign c putchar('\n':wybe.char, ~#wybe.io$io#1:wybe.phantom, ?#wybe.io$io#2:wybe.phantom) @wybe:73:28
commonsubexpr
======================================================================
AFTER LLVM IR:

; ModuleID = 'commonsubexpr'

; Function Attrs: nounwind
declare void @putchar(i8) #0

; Function Attrs: nounwind
define i32 @commonsubexpr.main() #0 {
entry:
  tail call void @putchar(i8 10)
  tail call void @putchar(i8 10)
  ret i32 0
}

; Function Attrs: nounwind
define void @"commonsubexpr.common_subexpr<0>"() #0 {
entry:
  tail call void @putchar(i8 10)
  tail call void @putchar(i8 10)
  ret void
}

attributes #0 = { nounwind }

