use position

public proc replicate2(p1:position, ?p2:position) use !io
    ?pp = position(0,0)
    !print("some noise...")
    !println(pp.x)

    ?p2 = p1
end

# Expected Alias Pairs: [(0,1),(0,2),(1,2)]?
public proc replicate1(p1:position, ?p2:position, ?p3:position) use !io
    !replicate2(p1, ?p2)
    !replicate2(p2, ?p3)
    x(!p2, 22)
end

?p1 = position(10,10)
!replicate1(p1, ?p2, ?p3)

# p2 CAN be destructively updated because p2 is not aliased?
x(!p2, 2222222)
!print("expect p2 is 2222222? ")
!println(p2.x)

# p1 is non-destructively updated (because p1 is aliased to p3)
# Should compiler also check if p1's aliased variable, which is p3, is dead now?
# If p1's shared data structures are all dead, then it's safe to destructively
# update p1!
# However, compiler doesn't know p3 is dead...
x(!p1, 11)
!print("expect p1 is 11? ")
!println(p1.x)
