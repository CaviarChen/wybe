# passing data structures in recursive call

use position

public proc if_test(a:position, b:position, ?r:position)
    if a.x > 0 ::
      ?tmp = b
      ?b = a
      ?a = tmp
      if_test(a, b, ?r)
    | true :: ?r = a
    end
end

proc printPos(name:string, p:position) use !io
  !print(name)
  !print(": ")
  !print(p.x)
  !print(" ")
  !println(p.y)
end

?pa = position(100, 101)
?pb = position(-200, -201)
!println("--- before proc call: ")
!printPos("pa", pa)
!printPos("pb", pb)

if_test(pa, pb, ?r)

!println("--- after proc call: ")
!printPos("pa", pa)
!printPos("pb", pb)

!println("--- result - expected to be same as pb: ")
!printPos("r", r)

!println("--- modify pa.x: ")
x(!pa, -1000)
!printPos("pa", pa)

!println("result: ")
!printPos("r", r)
