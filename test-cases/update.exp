======================================================================
AFTER EVERYTHING:
 Module update
  public submods  : 
  public types    : 
  public resources: 
  public procs    : update.inc2<0>
                    update.inc2<1>
  imports         : use wybe
  types           : 
  resources       : 
  procs           : 

inc2 > public (0 calls) (inline)
0: inc2(x#0:wybe.int, ?$#0:wybe.int):
    foreign llvm add(~x#0:wybe.int, 1:wybe.int, ?tmp$4#0:wybe.int) @wybe:4:38
    foreign llvm add(~tmp$4#0:wybe.int, 1:wybe.int, ?tmp$7#0:wybe.int) @wybe:4:38
    foreign llvm move(~tmp$7#0:wybe.int, ?$#0:wybe.int)
inc2 > public (0 calls) (inline)
1: inc2([x#0:wybe.int], ?x#1:wybe.int, y#0:wybe.int):
    foreign llvm sub(~y#0:wybe.int, 1:wybe.int, ?tmp$11#0:wybe.int) @wybe:5:44
    foreign llvm sub(~tmp$11#0:wybe.int, 1:wybe.int, ?tmp$14#0:wybe.int) @wybe:5:44
    foreign llvm move(~tmp$14#0:wybe.int, ?%x#1:wybe.int)
update
======================================================================
AFTER LLVM IR:

; ModuleID = 'update'

define i32 @update.inc2(i32 %"x#0") {
entry:
  %"tmp$4#0" = add i32 %"x#0", 1
  %"tmp$7#0" = add i32 %"tmp$4#0", 1
  ret i32 %"tmp$7#0"
}

define i32 @update.inc21(i32 %"y#0") {
entry:
  %"tmp$11#0" = sub i32 %"y#0", 1
  %"tmp$14#0" = sub i32 %"tmp$11#0", 1
  ret i32 %"tmp$14#0"
}

