======================================================================
AFTER EVERYTHING:
 Module constfold
  public submods  : 
  public types    : 
  public resources: 
  public procs    : constfold.fold_add<0>
                    constfold.fold_mult<0>
                    constfold.fold_test<0>
                    constfold.fortytwo<0>
  imports         : use wybe
  types           : 
  resources       : 
  procs           : 

fold_add > public inline (3 calls)
0: fold_add(?$#0:wybe.int):
    foreign llvm move(42:wybe.int, ?$#0:wybe.int) @constfold:2:8


fold_mult > public inline (3 calls)
0: fold_mult(?$#0:wybe.int):
    foreign llvm move(42:wybe.int, ?$#0:wybe.int) @constfold:3:8


fold_test > public inline (0 calls)
0: fold_test(?$#0:wybe.int):
    foreign llvm move(42:wybe.int, ?$#0:wybe.int) @constfold:4:8


fortytwo > public inline (0 calls)
0: fortytwo(?$#0:wybe.int):
    foreign llvm move(42:wybe.int, ?$#0:wybe.int) @constfold:1:8


gen$1 > inline (2 calls)
0: gen$1(tmp$0#0:wybe.int, [tmp$1#0:wybe.bool], ?$#0:wybe.int):
    foreign llvm move(~tmp$0#0:wybe.int, ?$#0:wybe.int) @constfold:4:8
constfold
======================================================================
AFTER LLVM IR:

; ModuleID = 'constfold'

; Function Attrs: nounwind readnone
define i64 @"constfold.fold_add<0>"() #0 {
entry:
  ret i64 42
}

; Function Attrs: nounwind readnone
define i64 @"constfold.fold_mult<0>"() #0 {
entry:
  ret i64 42
}

; Function Attrs: nounwind readnone
define i64 @"constfold.fold_test<0>"() #0 {
entry:
  ret i64 42
}

; Function Attrs: nounwind readnone
define i64 @"constfold.fortytwo<0>"() #0 {
entry:
  ret i64 42
}

; Function Attrs: nounwind readnone
define i64 @"constfold.gen$1<0>"(i64 %"tmp$0#0") #0 {
entry:
  ret i64 %"tmp$0#0"
}

attributes #0 = { nounwind readnone }

