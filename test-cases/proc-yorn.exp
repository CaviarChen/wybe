[ProcDecl Public (ProcProto "yorn" [Param "prompt" (TypeSpec "string" []) ParamIn,Param "result" (TypeSpec "bool" []) ParamOut]) [Placed (Loop [Placed (NormalStmt (ProcCall "print" [Var "prompt"])) "test-cases/proc-yorn.frg" (line 2, column 12),Placed (NormalStmt (ProcCall "print" [StringValue " (y/n) "])) "test-cases/proc-yorn.frg" (line 3, column 12),Placed (NormalStmt (ProcCall "read_char" [Var "response"])) "test-cases/proc-yorn.frg" (line 4, column 12),Placed (NormalStmt (Assign "result" (Fncall "is_yes" [Var "response"]))) "test-cases/proc-yorn.frg" (line 5, column 12),Placed (NextIf (Fncall "is_yes_or_no" [Var "response"])) "test-cases/proc-yorn.frg" (line 6, column 12),Placed (NormalStmt (ProcCall "println" [StringValue "Please answer 'yes' or 'no'."])) "test-cases/proc-yorn.frg" (line 7, column 12),Placed (BreakIf (Fncall "is_yes_or_no" [Var "response"])) "test-cases/proc-yorn.frg" (line 8, column 12)]) "test-cases/proc-yorn.frg" (line 2, column 8)] (Just "test-cases/proc-yorn.frg" (line 1, column 8))]
Module {modImports = fromList [], pubTypes = fromList [], pubResources = fromList [], pubProcs = fromList ["yorn"], modTypes = fromList [], modResources = fromList [], modProcs = fromList [("yorn",ProcDef (ProcProto "yorn" [Param "prompt" (TypeSpec "string" []) ParamIn,Param "result" (TypeSpec "bool" []) ParamOut]) [Placed (Loop [Placed (NormalStmt (ProcCall "print" [Var "prompt"])) "test-cases/proc-yorn.frg" (line 2, column 12),Placed (NormalStmt (ProcCall "print" [StringValue " (y/n) "])) "test-cases/proc-yorn.frg" (line 3, column 12),Placed (NormalStmt (ProcCall "read_char" [Var "response"])) "test-cases/proc-yorn.frg" (line 4, column 12),Placed (NormalStmt (Assign "result" (Fncall "is_yes" [Var "response"]))) "test-cases/proc-yorn.frg" (line 5, column 12),Placed (NextIf (Fncall "is_yes_or_no" [Var "response"])) "test-cases/proc-yorn.frg" (line 6, column 12),Placed (NormalStmt (ProcCall "println" [StringValue "Please answer 'yes' or 'no'."])) "test-cases/proc-yorn.frg" (line 7, column 12),Placed (BreakIf (Fncall "is_yes_or_no" [Var "response"])) "test-cases/proc-yorn.frg" (line 8, column 12)]) "test-cases/proc-yorn.frg" (line 2, column 8)] (Just "test-cases/proc-yorn.frg" (line 1, column 8)))]}
