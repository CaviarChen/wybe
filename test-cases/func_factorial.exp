======================================================================
AFTER EVERYTHING:
 Module func_factorial
  public submods  : 
  public types    : 
  public resources: 
  public procs    : func_factorial.<0>
                    func_factorial.factorial<0>
  imports         : use wybe
  types           : 
  resources       : 
  procs           : 

*main* > public (0 calls)
0: (wybe.io$io#0:wybe.phantom, ?wybe.io$io#1:wybe.phantom):
    func_factorial.gen$1<0>(5:wybe.int, ?tmp$2#0:wybe.int, ?tmp$3#0:wybe.int) @func_factorial:2:8
    foreign c print_int(~tmp$3#0:wybe.int, ~#wybe.io$io#0:wybe.phantom, ?#wybe.io$io#1:wybe.phantom) @wybe:110:38


factorial > public (2 calls) (inline)
0: factorial(n#0:wybe.int, ?$#0:wybe.int):
    func_factorial.gen$1<0>(~n#0:wybe.int, ?n#1:wybe.int, ?tmp$0#0:wybe.int) @func_factorial:2:8
    foreign llvm move(~tmp$0#0:wybe.int, ?$#0:wybe.int)


gen$1 > (1 calls)
0: gen$1(n#0:wybe.int, [?n#0:wybe.int], ?tmp$0#0:wybe.int):
    foreign llvm icmp sle(n#0:wybe.int, 0:wybe.int, ?tmp$7#0:wybe.bool) @wybe:16:40
    case ~tmp$7#0 of
    0:
        foreign llvm sub(n#0:wybe.int, 1:wybe.int, ?tmp$10#0:wybe.int) @wybe:7:38
        func_factorial.gen$1<0>(~tmp$10#0:wybe.int, ?tmp$12#0:wybe.int, ?tmp$13#0:wybe.int) @func_factorial:2:8
        foreign llvm mul(n#0:wybe.int, ~tmp$13#0:wybe.int, ?tmp$16#0:wybe.int) @wybe:12:38
        foreign llvm move(~tmp$16#0:wybe.int, ?tmp$0#0:wybe.int)

    1:
        foreign llvm move(1:wybe.int, ?tmp$0#0:wybe.int)

