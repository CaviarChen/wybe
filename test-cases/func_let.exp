======================================================================
AFTER EVERYTHING:
 Module func_let
  public submods  : 
  public types    : 
  public resources: 
  public procs    : func_let.<0>
                    func_let.quad<0>
  imports         : use wybe
  types           : 
  resources       : 
  procs           : 

*main* > public inline (0 calls)
0: (wybe.io$io#0:phantom, ?wybe.io$io#1:phantom):
    foreign c print_int(40:wybe.int, ~#wybe.io$io#0:phantom, ?#wybe.io$io#1:phantom) @wybe:80:38


quad > public inline (1 calls)
0: quad(x#0:wybe.int, ?$#0:wybe.int):
    foreign llvm add(~x#0:wybe.int, ~x#0:wybe.int, ?tmp$0#0:wybe.int) @wybe:12:38
    foreign llvm add(~tmp$0#0:wybe.int, ~tmp$0#0:wybe.int, ?$#0:wybe.int) @wybe:12:38
  LLVM code       :

; ModuleID = 'func_let'


declare external ccc void @print_int(i64)

declare external ccc i8* @wybe_malloc(i32)

define external ccc i32 @func_let.main(){
entry:
  tail call ccc void @print_int(i64 40)
  %1 = alloca i32
  store i32 0, i32* %1
  ret i32 0
}

define external ccc i64 @"func_let.quad<0>"(i64 %"x#0"){
entry:
  %"tmp$0#0" = add i64 %"x#0", %"x#0"
  %"$#0" = add i64 %"tmp$0#0", %"tmp$0#0"
  ret i64 %"$#0"
}
