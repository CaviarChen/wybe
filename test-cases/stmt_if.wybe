# if case

public type tree = public empty | node(left:tree, key:int, right:tree) end

public test proc lookup(key1:int, tree:tree, ?result:bool)
    if tree = empty :: ?result = false
    |  tree = node(?left, ?key2, ?right) ::
        if key1 = key2 :: ?result = true
        |  key1 < key2 :: lookup(key1, left, ?result)
        |  true:: lookup(key1, right, ?result)
        end
    | true :: ?result = false
    end
end

?tr = node(empty, 1, empty)

if lookup(1, tr, ?found) :: !print("found")
| true :: !print("not found")
end