======================================================================
AFTER EVERYTHING:
 Module sister_module
  public submods  : 
  public types    : 
  public resources: 
  public procs    : 
  imports         : use sister_module.m1
                    use sister_module.m2
                    use wybe
  types           : 
  resources       : 
  procs           : 

baz > inline (0 calls)
0: baz(i#0:wybe.int, ?j#0:wybe.int):
    foreign llvm add(~i#0:wybe.int, 1:wybe.int, ?j#0:wybe.int) @wybe:12:38


buzz > inline (0 calls)
0: buzz(i#0:wybe.int, ?j#0:wybe.int):
    sister_module.m2.bar<0>(~i#0:wybe.int, ?j#0:wybe.int) @sister_module:12:26
  submodules      : sister_module.m1, sister_module.m2
--------------------------------------------------
 Module sister_module.m1
  public submods  : 
  public types    : 
  public resources: 
  public procs    : sister_module.m1.foo<0>
  imports         : use wybe
  types           : 
  resources       : 
  procs           : 

foo > public inline (0 calls)
0: foo(i#0:wybe.int, ?j#0:wybe.int):
    foreign llvm add(~i#0:wybe.int, 1:wybe.int, ?j#0:wybe.int) @wybe:12:38
--------------------------------------------------
 Module sister_module.m2
  public submods  : 
  public types    : 
  public resources: 
  public procs    : sister_module.m2.bar<0>
  imports         : use sister_module
                    use wybe
  types           : 
  resources       : 
  procs           : 

bar > public inline (0 calls)
0: bar(i#0:wybe.int, ?j#0:wybe.int):
    foreign llvm add(~i#0:wybe.int, 1:wybe.int, ?k#0:wybe.int) @wybe:12:38
    foreign llvm add(~k#0:wybe.int, 1:wybe.int, ?j#0:wybe.int) @wybe:12:38
sister_module, sister_module.m1, sister_module.m2
======================================================================
AFTER LLVM IR:

; ModuleID = 'sister_module'
source_filename = "test-cases/sister_module.wybe"

; Function Attrs: norecurse nounwind readnone
define i64 @"sister_module.baz<0>"(i64 %"i#0") local_unnamed_addr #0 {
entry:
  %"j#0" = add i64 %"i#0", 1
  ret i64 %"j#0"
}

; Function Attrs: norecurse nounwind readnone
define i64 @"sister_module.buzz<0>"(i64 %"i#0") local_unnamed_addr #0 {
entry:
  %"j#0" = tail call i64 @"sister_module.m2.bar<0>"(i64 %"i#0")
  ret i64 %"j#0"
}

; Function Attrs: norecurse nounwind readnone
define i64 @"sister_module.m1.foo<0>"(i64 %"i#0") local_unnamed_addr #0 {
entry:
  %"j#0" = add i64 %"i#0", 1
  ret i64 %"j#0"
}

; Function Attrs: norecurse nounwind readnone
define i64 @"sister_module.m2.bar<0>"(i64 %"i#0") local_unnamed_addr #0 {
entry:
  %"j#0" = add i64 %"i#0", 2
  ret i64 %"j#0"
}

attributes #0 = { norecurse nounwind readnone }

--------------------------------------------------
; ModuleID = 'sister_module.m1'
source_filename = "test-cases"

; Function Attrs: norecurse nounwind readnone
define i64 @"sister_module.m1.foo<0>"(i64 %"i#0") local_unnamed_addr #0 {
entry:
  %"j#0" = add i64 %"i#0", 1
  ret i64 %"j#0"
}

attributes #0 = { norecurse nounwind readnone }

--------------------------------------------------
; ModuleID = 'sister_module.m2'
source_filename = "test-cases"

; Function Attrs: norecurse nounwind readnone
define i64 @"sister_module.m2.bar<0>"(i64 %"i#0") local_unnamed_addr #0 {
entry:
  %"j#0" = add i64 %"i#0", 2
  ret i64 %"j#0"
}

attributes #0 = { norecurse nounwind readnone }

