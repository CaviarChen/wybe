Public type position is @position:1:8
  Public ctor position(x:int,y:int) @position:2:12
end


 Module position
  public submods  : position @position:1:8
  public types    : 
  public resources: 
  public procs    : 
  imports         : 
  types           : 
  resources       : 
  procs           : 

Submodules of position:
position: 
 Module position.position([])
  public submods  : 
  public types    : position/0 @position:1:8
  public resources: 
  public procs    : position(x:0:int, y:0:int, ?$:-1:position) <0>
                    x($rec:0:position, ?$rec:-1:position, $field:0:int) <1>
                    x($rec:0:position, ?$:-1:int) <0>
                    y($rec:0:position, ?$rec:-1:position, $field:0:int) <1>
                    y($rec:0:position, ?$:-1:int) <0>
  imports         : 
  types           : position/0 @position:1:8
  resources       : 
  procs           : position:
proc position(x:0:int, y:0:int, ?$:-1:position) (id 0): 
    foreign $ alloc("position", "position", ?$rec:0)
    foreign $ mutate("position", "position", "x", $rec:0, ?$rec:1, x:0)
    foreign $ mutate("position", "position", "y", $rec:1, ?$rec:2, y:0)
    =(?$:1, $rec:2)
                    x:
proc x($rec:0:position, ?$:-1:int) (id 0): 
    foreign $ access("position", "position", "x", $rec:0, ?$tmp0:0)
    =(?$:1, $tmp0:0)
proc x($rec:0:position, ?$rec:-1:position, $field:0:int) (id 1): 
    foreign $ mutate("position", "position", "x", $rec:0, ?$rec:1, $field:0)
                    y:
proc y($rec:0:position, ?$:-1:int) (id 0): 
    foreign $ access("position", "position", "y", $rec:0, ?$tmp0:0)
    =(?$:1, $tmp0:0)
proc y($rec:0:position, ?$rec:-1:position, $field:0:int) (id 1): 
    foreign $ mutate("position", "position", "y", $rec:0, ?$rec:1, $field:0)

Submodules of position.position:

