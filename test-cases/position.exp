Public type position is {position:1:8}
  Public ctor position(x:int,y:int) {position:2:12}
end


 Module position
  public submods  : position {position:1:8}
  public types    : 
  public resources: 
  public procs    : 
  imports         : 
  types           : 
  resources       : 
  procs           : 

Submodules of position:
position: 
 Module position.position([])
  public submods  : 
  public types    : position/0 {position:1:8}
  public resources: 
  public procs    : position(x:int, y:int, ?$:position) <0> {?}
                    x(!$rec:position, $field:int) <1> {?}
                    x($rec:position, ?$field:int) <0> {?}
                    y(!$rec:position, $field:int) <1> {?}
                    y($rec:position, ?$field:int) <0> {?}
  imports         : 
  types           : position/0 {position:1:8}
  resources       : 
  procs           : position:
proc position(x:int, y:int, ?$:position) (id 0):  {?}
    $alloc(position, ?$tmp0) {?}
    update$x(x, $tmp0, ?$tmp1) {?}
    update$y(y, $tmp1, ?$tmp2) {?}
    =(?$, $tmp2) {?}
                    x:
proc x($rec:position, ?$field:int) (id 0):  {?}
    foreign  access(position, $rec, ?$field) {?}
proc x(!$rec:position, $field:int) (id 1):  {?}
    foreign  mutate(position, !$rec, $field) {?}
                    y:
proc y($rec:position, ?$field:int) (id 0):  {?}
    foreign  access(position, $rec, ?$field) {?}
proc y(!$rec:position, $field:int) (id 1):  {?}
    foreign  mutate(position, !$rec, $field) {?}

Submodules of position.position:

