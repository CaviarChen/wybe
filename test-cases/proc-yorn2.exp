Public proc yorn(prompt:string, ?result:bool) {proc-yorn2:1:8}[do print(prompt {proc-yorn2:2:15}) {proc-yorn2:2:9} {proc-yorn2:2:9}print(" (y/n) " {proc-yorn2:3:15}) {proc-yorn2:3:9} {proc-yorn2:3:9}read_line(?response {proc-yorn2:4:19}) {proc-yorn2:4:9} {proc-yorn2:4:9}=(?responsechar {proc-yorn2:5:9}, to_upper(first(response {proc-yorn2:5:40}) {proc-yorn2:5:34}) {proc-yorn2:5:25}) {proc-yorn2:5:9} {proc-yorn2:5:9}=(?result {proc-yorn2:6:9}, ==(responsechar {proc-yorn2:6:19}, 'Y' {proc-yorn2:6:35}) {proc-yorn2:6:19}) {proc-yorn2:6:9} {proc-yorn2:6:9}until or(result {proc-yorn2:7:15}, ==(responsechar {proc-yorn2:7:25}, 'N' {proc-yorn2:7:41}) {proc-yorn2:7:25}) {proc-yorn2:7:15} {proc-yorn2:7:9}println("Please answer 'yes' or 'no'." {proc-yorn2:8:17}) {proc-yorn2:8:9} {proc-yorn2:8:9} end {proc-yorn2:2:5}]

 Module proc-yorn2
  public submods  : 
  public types    : 
  public resources: 
  public procs    : yorn(prompt:string, ?result:bool) <0> {proc-yorn2:1:8}
  imports         : 
  types           : 
  resources       : 
  procs           : yorn:
proc yorn(prompt:string, ?result:bool) (id 0):  {proc-yorn2:1:8}
    do  {proc-yorn2:2:5}
        print(prompt:0) {proc-yorn2:2:9}
        print(" (y/n) ") {proc-yorn2:3:9}
        read_line(?response:0) {proc-yorn2:4:9}
        first(response:0, ?$tmp4:0) {proc-yorn2:5:34}
        to_upper($tmp4:0, ?$tmp5:0) {proc-yorn2:5:25}
        =(?responsechar:0, $tmp5:0) {proc-yorn2:5:9}
        ==(responsechar:0, 'Y', ?$tmp3:0) {proc-yorn2:6:19}
        =(?result:0, $tmp3:0) {proc-yorn2:6:9}
        ==(responsechar:0, 'N', ?$tmp0:0) {proc-yorn2:7:25}
        or(result:0, $tmp0:0, ?$tmp1:0) {proc-yorn2:7:15}
        =(?$tmp2:0, $tmp1:0) {?}
        until $tmp2:0 {proc-yorn2:7:9}
        println("Please answer 'yes' or 'no'.") {proc-yorn2:8:9}
    end

Submodules of proc-yorn2:

