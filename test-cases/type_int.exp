 Module type_int
  public submods  : int @type_int:1:8
  public types    : int/0 @type_int:1:8
  public resources: 
  public procs    : type_int.int.*<0>
                    type_int.int.+<2>
                    type_int.int.+<1>
                    type_int.int.+<0>
                    type_int.int.-<2>
                    type_int.int.-<1>
                    type_int.int.-<0>
                    type_int.int./<0>
                    type_int.int./=<0>
                    type_int.int.<<0>
                    type_int.int.<=<0>
                    type_int.int.==<0>
                    type_int.int.><0>
                    type_int.int.>=<0>
  imports         : public import type_int.int 
                    import wybe 
  types           : int/0 @type_int:1:8
  resources       : 
  procs           : 
  submodules      : type_int.int
--------------------------------------------------
 Module type_int.int([])
  public submods  : 
  public types    : 
  public resources: 
  public procs    : type_int.int.*<0>
                    type_int.int.+<2>
                    type_int.int.+<1>
                    type_int.int.+<0>
                    type_int.int.-<2>
                    type_int.int.-<1>
                    type_int.int.-<0>
                    type_int.int./<0>
                    type_int.int./=<0>
                    type_int.int.<<0>
                    type_int.int.<=<0>
                    type_int.int.==<0>
                    type_int.int.><0>
                    type_int.int.>=<0>
  imports         : import wybe 
  types           : 
  resources       : 
  procs           : *:
public proc *(x:0:int, y:0:int, ?tmp$0:0:int)<0>  @type_int:8:12 (0 calls)
    foreign llvm mul(32:int, ~x:0:int, ~y:0:int, ?tmp$0:0:int) @type_int:8:38
                    +:
public proc +(x:0:int, y:0:int, ?tmp$0:0:int)<0>  @type_int:2:12 (0 calls)
    foreign llvm add(32:int, ~x:0:int, ~y:0:int, ?tmp$0:0:int) @type_int:2:38
public proc +(?tmp$0:0:int, y:0:int, z:0:int)<1>  @type_int:3:12 (0 calls)
    foreign llvm sub(32:int, ~z:0:int, ~y:0:int, ?tmp$0:0:int) @type_int:3:44
public proc +(x:0:int, ?tmp$0:0:int, z:0:int)<2>  @type_int:4:12 (0 calls)
    foreign llvm sub(32:int, ~z:0:int, ~x:0:int, ?tmp$0:0:int) @type_int:4:44
                    -:
public proc -(x:0:int, y:0:int, ?tmp$0:0:int)<0>  @type_int:5:12 (0 calls)
    foreign llvm sub(32:int, ~x:0:int, ~y:0:int, ?tmp$0:0:int) @type_int:5:38
public proc -(?tmp$0:0:int, y:0:int, z:0:int)<1>  @type_int:6:12 (0 calls)
    foreign llvm add(32:int, ~z:0:int, ~y:0:int, ?tmp$0:0:int) @type_int:6:44
public proc -(x:0:int, ?tmp$0:0:int, z:0:int)<2>  @type_int:7:12 (0 calls)
    foreign llvm sub(32:int, ~z:0:int, ~x:0:int, ?tmp$0:0:int) @type_int:7:44
                    /:
public proc /(x:0:int, y:0:int, ?tmp$0:0:int)<0>  @type_int:9:12 (0 calls)
    foreign llvm sdiv(32:int, ~x:0:int, ~y:0:int, ?tmp$0:0:int) @type_int:9:38
                    /=:
public proc /=(x:0:int, y:0:int, ?tmp$0:0:bool)<0>  @type_int:11:12 (0 calls)
    foreign llvm icmp ne(32:int, ~x:0:int, ~y:0:int, ?tmp$0:0:bool) @type_int:11:40
                    <:
public proc <(x:0:int, y:0:int, ?tmp$0:0:bool)<0>  @type_int:12:12 (0 calls)
    foreign llvm icmp slt(32:int, ~x:0:int, ~y:0:int, ?tmp$0:0:bool) @type_int:12:39
                    <=:
public proc <=(x:0:int, y:0:int, ?tmp$0:0:bool)<0>  @type_int:13:12 (0 calls)
    foreign llvm icmp sle(32:int, ~x:0:int, ~y:0:int, ?tmp$0:0:bool) @type_int:13:40
                    ==:
public proc ==(x:0:int, y:0:int, ?tmp$0:0:bool)<0>  @type_int:10:12 (0 calls)
    foreign llvm icmp eq(32:int, ~x:0:int, ~y:0:int, ?tmp$0:0:bool) @type_int:10:40
                    >:
public proc >(x:0:int, y:0:int, ?tmp$0:0:bool)<0>  @type_int:14:12 (0 calls)
    foreign llvm icmp sgt(32:int, ~x:0:int, ~y:0:int, ?tmp$0:0:bool) @type_int:14:39
                    >=:
public proc >=(x:0:int, y:0:int, ?tmp$0:0:bool)<0>  @type_int:15:12 (0 calls)
    foreign llvm icmp sge(32:int, ~x:0:int, ~y:0:int, ?tmp$0:0:bool) @type_int:15:40
