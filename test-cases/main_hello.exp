======================================================================
AFTER EVERYTHING:
 Module command_line
  public submods  : 
  public types    : 
  public resources: argc: command_line.argc
                    argv: command_line.argv
                    exit_code: command_line.exit_code
  public procs    : 
  imports         : use wybe
  types           : 
  resources       : argc: fromList [(command_line.argc,Just wybe.int @command_line:2:8)] @command_line:2:8
                    argv: fromList [(command_line.argv,Just wybe.int @command_line:3:8)] @command_line:3:8
                    exit_code: fromList [(command_line.exit_code,Just wybe.int @command_line:4:8)] @command_line:4:8
  procs           : 


  LLVM code       :

; ModuleID = 'command_line'


declare external ccc i8* @wybe_malloc(i32)
--------------------------------------------------
 Module main_hello
  public submods  : 
  public types    : 
  public resources: 
  public procs    : main_hello.<0>
  imports         : use command_line
                    use wybe
  types           : 
  resources       : 
  procs           : 

*main* > public inline (0 calls)
0: (argc#0:wybe.int, [?argc#0:wybe.int], argv#0:wybe.int, [?argv#0:wybe.int], [exit_code#0:wybe.int], ?exit_code#1:wybe.int, io#0:phantom, ?io#3:phantom):
    foreign llvm move(42:wybe.int, ?exit_code#1:wybe.int) @main_hello:3:1
    foreign c print_string("hello, world!":wybe.string, ~#io#0:phantom, ?tmp$2#0:phantom) @wybe:92:41
    foreign c putchar('\n':wybe.char, ~tmp$2#0:phantom, ?#io#1:phantom) @wybe:78:28
    foreign c print_int(argc#0:wybe.int, ~#io#1:phantom, ?#io#2:phantom) @wybe:80:38
    foreign c print_string(" command line arguments":wybe.string, ~#io#2:phantom, ?#io#3:phantom) @wybe:92:41

  LLVM code       :

; ModuleID = 'main_hello'


declare external ccc void @print_string(i8*)

declare external ccc void @print_int(i64)

declare external ccc void @putchar(i8)

@main_hello.2 = constant [24 x i8] c" command line arguments\00"

@main_hello.1 = constant [14 x i8] c"hello, world!\00"

declare external ccc i8* @wybe_malloc(i32)

define external ccc i32 @main_hello.main(i64 %"argc#0", i64 %"argv#0"){
entry:
  tail call ccc void @print_string(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @main_hello.1, i32 0, i32 0))
  tail call ccc void @putchar(i8 10)
  tail call ccc void @print_int(i64 %"argc#0")
  tail call ccc void @print_string(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @main_hello.2, i32 0, i32 0))
  %3 = alloca i32
  store i32 0, i32* %3
  ret i32 0
}
