======================================================================
AFTER EVERYTHING:
 Module stmt_if2
  public submods  : 
  public types    : tree: (stmt_if2.tree,"pointer")
  public resources: 
  public procs    : stmt_if2.<0>
                    stmt_if2.lookup<0>
                    stmt_if2.tree.=<0>
                    stmt_if2.tree.=<1>
                    stmt_if2.tree.=<2>
                    stmt_if2.tree.empty<0>
                    stmt_if2.tree.key<0>
                    stmt_if2.tree.key<1>
                    stmt_if2.tree.left<0>
                    stmt_if2.tree.left<1>
                    stmt_if2.tree.node<0>
                    stmt_if2.tree.node<1>
                    stmt_if2.tree.right<0>
                    stmt_if2.tree.right<1>
  imports         : public use stmt_if2.tree
                    use wybe
  types           : tree/0 (pointer)  @stmt_if2:3:8
  resources       : 
  procs           : 

*main* > public (0 calls)
0: (wybe.io$io#0:wybe.phantom, ?wybe.io$io#1:wybe.phantom): Alias Pairs: [(0,1)]

    foreign lpvm cast(0:stmt_if2.tree, ?tmp$1#0:stmt_if2.tree)
    foreign lpvm alloc(24:wybe.int, ?tmp$7#0:stmt_if2.tree)
    foreign lpvm mutate(~tmp$7#0:stmt_if2.tree, ?tmp$8#0:stmt_if2.tree, 24:wybe.int, 0:wybe.int, 1:wybe.int, tmp$1#0:stmt_if2.tree)
    foreign lpvm mutate(~tmp$8#0:stmt_if2.tree, ?tmp$9#0:stmt_if2.tree, 24:wybe.int, 8:wybe.int, 1:wybe.int, 1:wybe.int)
    foreign lpvm mutate(~tmp$9#0:stmt_if2.tree, ?tmp$0#0:stmt_if2.tree, 24:wybe.int, 16:wybe.int, 1:wybe.int, ~tmp$1#0:stmt_if2.tree)
    stmt_if2.lookup<0>(1:wybe.int, ~tmp$0#0:stmt_if2.tree, ?tmp$3#0:wybe.bool) @stmt_if2:15:4
    case ~tmp$3#0:wybe.bool of
    0:
        foreign llvm move(~wybe.io$io#0:wybe.phantom, ?wybe.io$io#1:wybe.phantom)

    1:
        foreign c print_string("found":wybe.string, ~#wybe.io$io#0:wybe.phantom, ?#wybe.io$io#1:wybe.phantom) @wybe:88:41



lookup > public (5 calls)
0: lookup(key#0:wybe.int, tree#0:stmt_if2.tree, ?$#0:wybe.bool): Alias Pairs: []

    foreign lpvm cast(0:stmt_if2.tree, ?tmp$1#0:stmt_if2.tree)
    stmt_if2.tree.=<2>(tree#0:stmt_if2.tree, tmp$1#0:stmt_if2.tree, ?tmp$11#0:wybe.bool) @stmt_if2:6:8
    case ~tmp$11#0:wybe.bool of
    0:
        foreign lpvm cast(tree#0:stmt_if2.tree, ?tmp$17#0:wybe.int)
        foreign llvm icmp ne(~tmp$17#0:wybe.int, 0:wybe.int, ?tmp$18#0:wybe.bool)
        case ~tmp$18#0:wybe.bool of
        0:
            foreign llvm move(~tmp$1#0:stmt_if2.tree, ?$#0:wybe.bool) @stmt_if2:5:8

        1:
            foreign lpvm access(tree#0:stmt_if2.tree, 0:wybe.int, ?l#0:stmt_if2.tree)
            foreign lpvm access(tree#0:stmt_if2.tree, 8:wybe.int, ?k#0:wybe.int)
            foreign lpvm access(~tree#0:stmt_if2.tree, 16:wybe.int, ?r#0:stmt_if2.tree)
            foreign llvm icmp eq(k#0:wybe.int, key#0:wybe.int, ?tmp$13#0:wybe.bool) @wybe:28:40
            case ~tmp$13#0:wybe.bool of
            0:
                foreign llvm icmp sgt(~k#0:wybe.int, key#0:wybe.int, ?tmp$14#0:wybe.bool) @wybe:24:39
                case ~tmp$14#0:wybe.bool of
                0:
                    stmt_if2.lookup<0>(~key#0:wybe.int, ~r#0:stmt_if2.tree, ?$#0:wybe.bool) @stmt_if2:10:14

                1:
                    stmt_if2.lookup<0>(~key#0:wybe.int, ~l#0:stmt_if2.tree, ?$#0:wybe.bool) @stmt_if2:9:30


            1:
                foreign lpvm cast(1:wybe.bool, ?$#0:wybe.bool)



    1:
        foreign llvm move(~tmp$1#0:stmt_if2.tree, ?$#0:wybe.bool) @stmt_if2:5:8

  submodules      : stmt_if2.tree
--------------------------------------------------
 Module stmt_if2.tree([])
  public submods  : 
  public types    : 
  public resources: 
  public procs    : stmt_if2.tree.=<0>
                    stmt_if2.tree.=<1>
                    stmt_if2.tree.=<2>
                    stmt_if2.tree.empty<0>
                    stmt_if2.tree.key<0>
                    stmt_if2.tree.key<1>
                    stmt_if2.tree.left<0>
                    stmt_if2.tree.left<1>
                    stmt_if2.tree.node<0>
                    stmt_if2.tree.node<1>
                    stmt_if2.tree.right<0>
                    stmt_if2.tree.right<1>
  imports         : use wybe
  types           : 
  resources       : 
  procs           : 

= > public inline (0 calls)
0: =(?out#0:stmt_if2.tree, in#0:stmt_if2.tree): Alias Pairs: []

    foreign llvm move(~in#0:stmt_if2.tree, ?out#0:stmt_if2.tree)
= > public inline (0 calls)
1: =(in#0:stmt_if2.tree, ?out#0:stmt_if2.tree): Alias Pairs: []

    foreign llvm move(~in#0:stmt_if2.tree, ?out#0:stmt_if2.tree)
= > public test (6 calls)
2: =($left#0:stmt_if2.tree, $right#0:stmt_if2.tree, ?$$#0:wybe.bool): Alias Pairs: []

    foreign lpvm cast($left#0:stmt_if2.tree, ?tmp$0#0:wybe.int)
    foreign llvm icmp eq(tmp$0#0:wybe.int, 0:wybe.int, ?tmp$1#0:wybe.bool)
    case ~tmp$1#0:wybe.bool of
    0:
        foreign llvm icmp ne(~tmp$0#0:wybe.int, 0:wybe.int, ?tmp$10#0:wybe.bool)
        case ~tmp$10#0:wybe.bool of
        0:
            foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)

        1:
            foreign lpvm access($left#0:stmt_if2.tree, 0:wybe.int, ?$left$left#0:stmt_if2.tree)
            foreign lpvm access($left#0:stmt_if2.tree, 8:wybe.int, ?$left$key#0:wybe.int)
            foreign lpvm access(~$left#0:stmt_if2.tree, 16:wybe.int, ?$left$right#0:stmt_if2.tree)
            foreign lpvm cast($right#0:stmt_if2.tree, ?tmp$12#0:wybe.int)
            foreign llvm icmp ne(~tmp$12#0:wybe.int, 0:wybe.int, ?tmp$13#0:wybe.bool)
            case ~tmp$13#0:wybe.bool of
            0:
                foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)

            1:
                foreign lpvm access($right#0:stmt_if2.tree, 0:wybe.int, ?$right$left#0:stmt_if2.tree)
                foreign lpvm access($right#0:stmt_if2.tree, 8:wybe.int, ?$right$key#0:wybe.int)
                foreign lpvm access(~$right#0:stmt_if2.tree, 16:wybe.int, ?$right$right#0:stmt_if2.tree)
                stmt_if2.tree.=<2>(~$left$left#0:stmt_if2.tree, ~$right$left#0:stmt_if2.tree, ?tmp$5#0:wybe.bool)
                case ~tmp$5#0:wybe.bool of
                0:
                    foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)

                1:
                    foreign llvm icmp eq(~$left$key#0:wybe.int, ~$right$key#0:wybe.int, ?tmp$6#0:wybe.bool) @wybe:28:40
                    case ~tmp$6#0:wybe.bool of
                    0:
                        foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)

                    1:
                        stmt_if2.tree.=<2>(~$left$right#0:stmt_if2.tree, ~$right$right#0:stmt_if2.tree, ?$$#0:wybe.bool)





    1:
        foreign llvm icmp eq(~$left#0:wybe.int, ~$right#0:wybe.int, ?$$#0:wybe.bool)



empty > public inline (0 calls)
0: empty(?$#0:stmt_if2.tree): Alias Pairs: []

    foreign lpvm cast(0:stmt_if2.tree, ?$#0:stmt_if2.tree)


key > public inline test (0 calls)
0: key($rec#0:stmt_if2.tree, ?$#0:wybe.int, ?$$#0:wybe.bool): Alias Pairs: []

    foreign lpvm cast($rec#0:stmt_if2.tree, ?tmp$0#0:wybe.int)
    foreign llvm icmp ne(~tmp$0#0:wybe.int, 0:wybe.int, ?tmp$1#0:wybe.bool)
    case ~tmp$1#0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)

    1:
        foreign lpvm access(~$rec#0:stmt_if2.tree, 8:wybe.int, ?$#0:wybe.int)
        foreign llvm move(1:wybe.bool, ?$$#0:wybe.bool)

key > public inline test (0 calls)
1: key($rec#0:stmt_if2.tree, ?$rec#1:stmt_if2.tree, $field#0:wybe.int, ?$$#0:wybe.bool): Alias Pairs: []

    foreign lpvm cast($rec#0:stmt_if2.tree, ?tmp$0#0:wybe.int)
    foreign llvm icmp ne(~tmp$0#0:wybe.int, 0:wybe.int, ?tmp$1#0:wybe.bool)
    case ~tmp$1#0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)
        foreign llvm move(~$rec#0:stmt_if2.tree, ?$rec#1:stmt_if2.tree)

    1:
        foreign lpvm mutate(~%$rec#0:stmt_if2.tree, ?%$rec#1:stmt_if2.tree, 24:wybe.int, 8:wybe.int, 0:wybe.int, ~$field#0:wybe.int)
        foreign llvm move(1:wybe.bool, ?$$#0:wybe.bool)



left > public inline test (0 calls)
0: left($rec#0:stmt_if2.tree, ?$#0:stmt_if2.tree, ?$$#0:wybe.bool): Alias Pairs: []

    foreign lpvm cast($rec#0:stmt_if2.tree, ?tmp$0#0:wybe.int)
    foreign llvm icmp ne(~tmp$0#0:wybe.int, 0:wybe.int, ?tmp$1#0:wybe.bool)
    case ~tmp$1#0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)

    1:
        foreign lpvm access(~$rec#0:stmt_if2.tree, 0:wybe.int, ?$#0:stmt_if2.tree)
        foreign llvm move(1:wybe.bool, ?$$#0:wybe.bool)

left > public inline test (0 calls)
1: left($rec#0:stmt_if2.tree, ?$rec#1:stmt_if2.tree, $field#0:stmt_if2.tree, ?$$#0:wybe.bool): Alias Pairs: []

    foreign lpvm cast($rec#0:stmt_if2.tree, ?tmp$0#0:wybe.int)
    foreign llvm icmp ne(~tmp$0#0:wybe.int, 0:wybe.int, ?tmp$1#0:wybe.bool)
    case ~tmp$1#0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)
        foreign llvm move(~$rec#0:stmt_if2.tree, ?$rec#1:stmt_if2.tree)

    1:
        foreign lpvm mutate(~%$rec#0:stmt_if2.tree, ?%$rec#1:stmt_if2.tree, 24:wybe.int, 0:wybe.int, 0:wybe.int, ~$field#0:stmt_if2.tree)
        foreign llvm move(1:wybe.bool, ?$$#0:wybe.bool)



node > public inline (0 calls)
0: node(left#0:stmt_if2.tree, key#0:wybe.int, right#0:stmt_if2.tree, ?$#0:stmt_if2.tree): Alias Pairs: []

    foreign lpvm alloc(24:wybe.int, ?$rec#0:stmt_if2.tree)
    foreign lpvm mutate(~%$rec#0:stmt_if2.tree, ?%$rec#1:stmt_if2.tree, 24:wybe.int, 0:wybe.int, 1:wybe.int, ~left#0:stmt_if2.tree)
    foreign lpvm mutate(~%$rec#1:stmt_if2.tree, ?%$rec#2:stmt_if2.tree, 24:wybe.int, 8:wybe.int, 1:wybe.int, ~key#0:wybe.int)
    foreign lpvm mutate(~%$rec#2:stmt_if2.tree, ?%$#0:stmt_if2.tree, 24:wybe.int, 16:wybe.int, 1:wybe.int, ~right#0:stmt_if2.tree)
node > public inline test (9 calls)
1: node(?left#0:stmt_if2.tree, ?key#0:wybe.int, ?right#0:stmt_if2.tree, $#0:stmt_if2.tree, ?$$#0:wybe.bool): Alias Pairs: []

    foreign lpvm cast($#0:stmt_if2.tree, ?tmp$0#0:wybe.int)
    foreign llvm icmp ne(~tmp$0#0:wybe.int, 0:wybe.int, ?tmp$1#0:wybe.bool)
    case ~tmp$1#0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)

    1:
        foreign lpvm access($#0:stmt_if2.tree, 0:wybe.int, ?left#0:stmt_if2.tree)
        foreign lpvm access($#0:stmt_if2.tree, 8:wybe.int, ?key#0:wybe.int)
        foreign lpvm access(~$#0:stmt_if2.tree, 16:wybe.int, ?right#0:stmt_if2.tree)
        foreign llvm move(1:wybe.bool, ?$$#0:wybe.bool)



right > public inline test (0 calls)
0: right($rec#0:stmt_if2.tree, ?$#0:stmt_if2.tree, ?$$#0:wybe.bool): Alias Pairs: []

    foreign lpvm cast($rec#0:stmt_if2.tree, ?tmp$0#0:wybe.int)
    foreign llvm icmp ne(~tmp$0#0:wybe.int, 0:wybe.int, ?tmp$1#0:wybe.bool)
    case ~tmp$1#0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)

    1:
        foreign lpvm access(~$rec#0:stmt_if2.tree, 16:wybe.int, ?$#0:stmt_if2.tree)
        foreign llvm move(1:wybe.bool, ?$$#0:wybe.bool)

right > public inline test (0 calls)
1: right($rec#0:stmt_if2.tree, ?$rec#1:stmt_if2.tree, $field#0:stmt_if2.tree, ?$$#0:wybe.bool): Alias Pairs: []

    foreign lpvm cast($rec#0:stmt_if2.tree, ?tmp$0#0:wybe.int)
    foreign llvm icmp ne(~tmp$0#0:wybe.int, 0:wybe.int, ?tmp$1#0:wybe.bool)
    case ~tmp$1#0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)
        foreign llvm move(~$rec#0:stmt_if2.tree, ?$rec#1:stmt_if2.tree)

    1:
        foreign lpvm mutate(~%$rec#0:stmt_if2.tree, ?%$rec#1:stmt_if2.tree, 24:wybe.int, 16:wybe.int, 0:wybe.int, ~$field#0:stmt_if2.tree)
        foreign llvm move(1:wybe.bool, ?$$#0:wybe.bool)

