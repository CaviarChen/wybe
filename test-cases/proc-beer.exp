Public proc print2(x:int, y:int) @proc-beer:1:8[do for count from 99 @proc-beer:2:29 by -1 to ("<",0 @proc-beer:2:38) @proc-beer:2:12println(++(count @proc-beer:3:20, " bottles of beer on the wall" @proc-beer:3:27) @proc-beer:3:20) @proc-beer:3:12 end @proc-beer:2:8]
Loop gen$1 body = [for count from 99 @proc-beer:2:29 by -1 to ("<",0 @proc-beer:2:38) @proc-beer:2:12,println(++(count @proc-beer:3:20, " bottles of beer on the wall" @proc-beer:3:27) @proc-beer:3:20) @proc-beer:3:12]
Loop vars = fromList ["count"]

 Module proc-beer
  public submods  : 
  public types    : 
  public resources: 
  public procs    : print2(x:0:int, y:0:int) <0> @proc-beer:1:8
  imports         : 
  types           : 
  resources       : 
  procs           : gen$1:
proc gen$1(count:0:?) (id 0): 
    -(count:0, 1, ?count:0)
    <(count:0, 0, ?$tmp0:0)
    gen$2($tmp0:0, count:0)
                    gen$2:
proc gen$2($tmp0:0:?, count:0:?) (id 0): 
    guard $tmp0:0 = 1
    ++(count:0, " bottles of beer on the wall", ?$tmp1:0) @proc-beer:3:20
    println($tmp1:0) @proc-beer:3:12
    gen$1(count:0)

    guard $tmp0:0 = 0
                    print2:
proc print2(x:0:int, y:0:int) (id 0):  @proc-beer:1:8
    =(?count:0, 99)
    gen$1(count:0)

Submodules of proc-beer:

