[ProcDecl Public (ProcProto "nada" [Param "x" (TypeSpec "int" []) ParamIn,Param "y" (TypeSpec "int" []) ParamIn]) [Placed (ProcCall "=" [ProcArg (Placed (Var "z") "test-cases/proc-allin.frg" (line 1, column 33)) ParamOut,ProcArg (Placed (Fncall "+" [Placed (Var "x") "test-cases/proc-allin.frg" (line 1, column 35),Placed (Var "y") "test-cases/proc-allin.frg" (line 1, column 37)]) "test-cases/proc-allin.frg" (line 1, column 35)) ParamIn]) "test-cases/proc-allin.frg" (line 1, column 33)] (Just "test-cases/proc-allin.frg" (line 1, column 8))]
Module {modImports = fromList [], pubTypes = fromList [], pubResources = fromList [], pubProcs = fromList ["nada"], modTypes = fromList [], modResources = fromList [], modProcs = fromList [("nada",[ProcDef 1 (ProcProto "nada" [Param "x" (TypeSpec "int" []) ParamIn,Param "y" (TypeSpec "int" []) ParamIn]) [Placed (ProcCall "=" [ProcArg (Placed (Var "z") "test-cases/proc-allin.frg" (line 1, column 33)) ParamOut,ProcArg (Placed (Fncall "+" [Placed (Var "x") "test-cases/proc-allin.frg" (line 1, column 35),Placed (Var "y") "test-cases/proc-allin.frg" (line 1, column 37)]) "test-cases/proc-allin.frg" (line 1, column 35)) ParamIn]) "test-cases/proc-allin.frg" (line 1, column 33)] (Just "test-cases/proc-allin.frg" (line 1, column 8))])], procCount = 1}
