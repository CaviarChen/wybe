Public func quad(x:int):int {func-where:1:8} = +(d {func-where:1:31}, d {func-where:1:33}) {func-where:1:31} where [=(?d {func-where:1:41}, +(x {func-where:1:44}, x {func-where:1:46}) {func-where:1:44}) {func-where:1:41}] {func-where:1:31}

 Module func-where
  public submods  : 
  public types    : 
  public resources: 
  public procs    : quad(x:int, ?$:int) <0> {func-where:1:8}
  imports         : 
  types           : 
  resources       : 
  procs           : quad:
proc quad(x:int, ?$:int) (id 0):  {func-where:1:8}
    +(x:0, x:0, ?$tmp0:0) {func-where:1:44}
    =(?d:0, $tmp0:0) {func-where:1:41}
    +(d:0, d:0, ?$tmp1:0) {func-where:1:31}
    =(?$:0, $tmp1:0) {?}

Submodules of func-where:

