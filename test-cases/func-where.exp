[FuncDecl Public (FnProto "quad" [Param "x" (TypeSpec "int" []) ParamIn]) (TypeSpec "int" []) (Placed (Where [Placed (Assign "d" (Placed (Fncall "+" [Placed (Var "x") "test-cases/func-where.frg" (line 1, column 43),Placed (Var "x") "test-cases/func-where.frg" (line 1, column 45)]) "test-cases/func-where.frg" (line 1, column 43))) "test-cases/func-where.frg" (line 1, column 41)] (Placed (Fncall "+" [Placed (Var "d") "test-cases/func-where.frg" (line 1, column 31),Placed (Var "d") "test-cases/func-where.frg" (line 1, column 33)]) "test-cases/func-where.frg" (line 1, column 31))) "test-cases/func-where.frg" (line 1, column 31)) (Just "test-cases/func-where.frg" (line 1, column 8))]
Module {modImports = fromList [], pubTypes = fromList [], pubResources = fromList [], pubProcs = fromList ["quad"], modTypes = fromList [], modResources = fromList [], modProcs = fromList [("quad",ProcDef (ProcProto "quad" [Param "x" (TypeSpec "int" []) ParamIn,Param "$" (TypeSpec "int" []) ParamOut]) [Placed (Assign "$" (Placed (Where [Placed (Assign "d" (Placed (Fncall "+" [Placed (Var "x") "test-cases/func-where.frg" (line 1, column 43),Placed (Var "x") "test-cases/func-where.frg" (line 1, column 45)]) "test-cases/func-where.frg" (line 1, column 43))) "test-cases/func-where.frg" (line 1, column 41)] (Placed (Fncall "+" [Placed (Var "d") "test-cases/func-where.frg" (line 1, column 31),Placed (Var "d") "test-cases/func-where.frg" (line 1, column 33)]) "test-cases/func-where.frg" (line 1, column 31))) "test-cases/func-where.frg" (line 1, column 31))) "test-cases/func-where.frg" (line 1, column 31)] (Just "test-cases/func-where.frg" (line 1, column 8)))]}
