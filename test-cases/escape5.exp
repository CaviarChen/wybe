======================================================================
AFTER EVERYTHING:
 Module escape5
  public submods  : 
  public types    : 
  public resources: 
  public procs    : escape5.<0>
                    escape5.bar<0>
                    escape5.replicate1<0>
  imports         : use wybe
  types           : 
  resources       : 
  procs           : 

*main* > public inline (0 calls)
0: (wybe.io$io#0:wybe.phantom, ?wybe.io$io#1:wybe.phantom): Alias Pairs: []

    escape5.bar<0>(~#wybe.io$io#0:wybe.phantom, ?#wybe.io$io#1:wybe.phantom) @escape5:22:2


bar > public (1 calls)
0: bar(wybe.io$io#0:wybe.phantom, ?wybe.io$io#4:wybe.phantom): Alias Pairs: []

    escape5.replicate1<0>(100:wybe.int, ?p2#0:wybe.int, 800:wybe.int, ?p4#0:wybe.int, ~#wybe.io$io#0:wybe.phantom, ?#wybe.io$io#1:wybe.phantom) @escape5:14:4
    escape5.replicate1<0>(100:wybe.int, ?p3#0:wybe.int, 800:wybe.int, ?p4#1:wybe.int, ~#wybe.io$io#1:wybe.phantom, ?#wybe.io$io#2:wybe.phantom) @escape5:15:4
    foreign c print_int(111:wybe.int, ~#wybe.io$io#2:wybe.phantom, ?tmp$4#0:wybe.phantom) @wybe:76:38
    foreign c putchar('\n':wybe.char, ~tmp$4#0:wybe.phantom, ?#wybe.io$io#3:wybe.phantom) @wybe:74:28
    foreign c print_int(~p2#0:wybe.int, ~#wybe.io$io#3:wybe.phantom, ?tmp$7#0:wybe.phantom) @wybe:76:38
    foreign c putchar('\n':wybe.char, ~tmp$7#0:wybe.phantom, ?#wybe.io$io#4:wybe.phantom) @wybe:74:28


replicate1 > public (2 calls)
0: replicate1(v1#0:wybe.int, ?v2#0:wybe.int, v3#0:wybe.int, ?v4#1:wybe.int, wybe.io$io#0:wybe.phantom, ?wybe.io$io#2:wybe.phantom): Alias Pairs: []

    foreign c print_string("random replicate1":wybe.string, ~#wybe.io$io#0:wybe.phantom, ?#wybe.io$io#1:wybe.phantom) @wybe:88:41
    foreign c print_int(2:wybe.int, ~#wybe.io$io#1:wybe.phantom, ?tmp$7#0:wybe.phantom) @wybe:76:38
    foreign c putchar('\n':wybe.char, ~tmp$7#0:wybe.phantom, ?#wybe.io$io#2:wybe.phantom) @wybe:74:28
    foreign llvm add(~v3#0:wybe.int, 100:wybe.int, ?tmp$0#0:wybe.int) @wybe:13:38
    foreign llvm mul(~tmp$0#0:wybe.int, 200:wybe.int, ?tmp$2#0:wybe.int) @wybe:21:38
    foreign llvm sdiv(~tmp$2#0:wybe.int, 4:wybe.int, ?v4#1:wybe.int) @wybe:22:38
    foreign llvm move(~v1#0:wybe.int, ?v2#0:wybe.int)
escape5
======================================================================
AFTER LLVM IR:

; ModuleID = 'escape5'
source_filename = "test-cases/escape5.wybe"

@escape5.8 = constant [18 x i8] c"random replicate1\00"

declare void @putchar(i8) local_unnamed_addr

declare void @print_int(i64) local_unnamed_addr

declare void @print_string(i8*) local_unnamed_addr

define i32 @escape5.main() local_unnamed_addr {
entry:
  tail call void @"escape5.bar<0>"()
  ret i32 0
}

define void @"escape5.bar<0>"() local_unnamed_addr {
entry:
  %0 = tail call { i64, i64 } @"escape5.replicate1<0>"(i64 100, i64 800)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = tail call { i64, i64 } @"escape5.replicate1<0>"(i64 100, i64 800)
  tail call void @print_int(i64 111)
  tail call void @putchar(i8 10)
  tail call void @print_int(i64 %1)
  tail call void @putchar(i8 10)
  ret void
}

define { i64, i64 } @"escape5.replicate1<0>"(i64 %"v1#0", i64 %"v3#0") local_unnamed_addr {
entry:
  tail call void @print_string(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @escape5.8, i64 0, i64 0))
  tail call void @print_int(i64 2)
  tail call void @putchar(i8 10)
  %0 = mul i64 %"v3#0", 200
  %"tmp$2#0" = add i64 %0, 20000
  %"v4#1" = ashr exact i64 %"tmp$2#0", 2
  %1 = insertvalue { i64, i64 } undef, i64 %"v1#0", 0
  %2 = insertvalue { i64, i64 } %1, i64 %"v4#1", 1
  ret { i64, i64 } %2
}

