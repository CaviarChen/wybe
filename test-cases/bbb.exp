======================================================================
AFTER EVERYTHING:
 Module bbb
  public submods  : 
  public types    : 
  public resources: 
  public procs    : bbb.<0>
  imports         : use ddd
                    use wybe
  types           : 
  resources       : 
  procs           : 

*main* > public inline (0 calls)
0: (wybe.io$io#0:wybe.phantom, ?wybe.io$io#1:wybe.phantom):
    foreign c print_string("BBB: Init":wybe.string, ~#wybe.io$io#0:wybe.phantom, ?tmp$2#0:wybe.phantom) @wybe:87:41
    foreign c putchar('\n':wybe.char, ~tmp$2#0:wybe.phantom, ?#wybe.io$io#1:wybe.phantom) @wybe:73:28
--------------------------------------------------
 Module ddd
  public submods  : 
  public types    : 
  public resources: 
  public procs    : ddd.<0>
  imports         : use wybe
  types           : 
  resources       : 
  procs           : 

*main* > public inline (0 calls)
0: (wybe.io$io#0:wybe.phantom, ?wybe.io$io#1:wybe.phantom):
    foreign c print_string("DDD: Init":wybe.string, ~#wybe.io$io#0:wybe.phantom, ?tmp$2#0:wybe.phantom) @wybe:87:41
    foreign c putchar('\n':wybe.char, ~tmp$2#0:wybe.phantom, ?#wybe.io$io#1:wybe.phantom) @wybe:73:28
bbb, ddd
======================================================================
AFTER LLVM IR:

; ModuleID = 'bbb'

@bbb.1 = constant [10 x i8] c"BBB: Init\00"

; Function Attrs: nounwind
declare void @putchar(i8) #0

declare void @print_string(i8*)

define i32 @bbb.main() {
entry:
  tail call void @print_string(i8* getelementptr inbounds ([10 x i8]* @bbb.1, i32 0, i32 0))
  tail call void @putchar(i8 10)
  ret i32 0
}

attributes #0 = { nounwind }

--------------------------------------------------
; ModuleID = 'ddd'

@ddd.1 = constant [10 x i8] c"DDD: Init\00"

; Function Attrs: nounwind
declare void @putchar(i8) #0

declare void @print_string(i8*)

define i32 @ddd.main() {
entry:
  tail call void @print_string(i8* getelementptr inbounds ([10 x i8]* @ddd.1, i32 0, i32 0))
  tail call void @putchar(i8 10)
  ret i32 0
}

attributes #0 = { nounwind }

