# Recursive data type:
# alias generated by different prims and combined because of transitivity
# property

use data_structure.mytree

# tl is alised to the return result
public func simpleMerge(tl:tree):tree = node(tl, 200, empty)

?t1 = node(empty, 1, empty)
?t = simpleMerge(t1)
!printTree(t)

if t1 = node(?l, ?k, ?r) :: ?t1 = node(l, 1000, r)
end
#if key(t1, ?k) :: ?k = 800
#end
!printTree(t1)
!printTree(t)