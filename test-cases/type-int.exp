Public type int is {type-int:1:8}
  Public func +(x:int,y:int):int {type-int:2:12} = foreign llvm add(x {type-int:2:55}, y {type-int:2:57}) {type-int:2:38}
  Public func -(x:int,y:int):int {type-int:3:12} = foreign llvm sub(x {type-int:3:55}, y {type-int:3:57}) {type-int:3:38}
  Public func *(x:int,y:int):int {type-int:4:12} = foreign llvm mul(x {type-int:4:55}, y {type-int:4:57}) {type-int:4:38}
  Public func /(x:int,y:int):int {type-int:5:12} = foreign llvm sdiv(x {type-int:5:56}, y {type-int:5:58}) {type-int:5:38}
  Public func ==(x:int,y:int):bool {type-int:6:12} = foreign llvm icmp(eq {type-int:6:58}, x {type-int:6:61}, y {type-int:6:63}) {type-int:6:40}
  Public func /=(x:int,y:int):bool {type-int:7:12} = foreign llvm icmp(ne {type-int:7:58}, x {type-int:7:61}, y {type-int:7:63}) {type-int:7:40}
  Public func <(x:int,y:int):bool {type-int:8:12} = foreign llvm icmp(slt {type-int:8:57}, x {type-int:8:61}, y {type-int:8:63}) {type-int:8:39}
  Public func <=(x:int,y:int):bool {type-int:9:12} = foreign llvm icmp(sle {type-int:9:58}, x {type-int:9:62}, y {type-int:9:64}) {type-int:9:40}
  Public func >(x:int,y:int):bool {type-int:10:12} = foreign llvm icmp(sgt {type-int:10:57}, x {type-int:10:61}, y {type-int:10:63}) {type-int:10:39}
  Public func >=(x:int,y:int):bool {type-int:11:12} = foreign llvm icmp(sge {type-int:11:58}, x {type-int:11:62}, y {type-int:11:64}) {type-int:11:40}
end

Module
  imports         : 
  public types    : int
  public resources: 
  public procs    : 
  types           : int: arity 0  {type-int:1:8}
  resources       : 
  procs           : 

