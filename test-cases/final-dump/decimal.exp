======================================================================
AFTER EVERYTHING:
 Module decimal
  public submods  : 
  public types    : 
  public resources: 
  public procs    : decimal.<0>
  imports         : use wybe
  types           : 
  resources       : 
  procs           : 

*main* > public inline (0 calls)
0: (argc#0:wybe.int, [?argc#0:wybe.int], argv#0:wybe.int, [?argv#0:wybe.int], exit_code#0:wybe.int, [?exit_code#0:wybe.int], io#0:wybe.phantom, ?io#1:wybe.phantom):
 AliasPairs: []
 AliasMultiSpeczInfo: []
    foreign c print_float(1.0e-2:wybe.float, ~#io#0:wybe.phantom, ?tmp$2#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp$2#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:nn:nn

  LLVM code       :

; ModuleID = 'decimal'


 


declare external ccc  void @putchar(i8)    


declare external ccc  void @print_float(double)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1)    


define external fastcc  void @"decimal.<0>"(i64  %"argc#0", i64  %"argv#0", i64  %"exit_code#0")    {
entry:
  tail call ccc  void  @print_float(double  1.000000e-2)  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}
