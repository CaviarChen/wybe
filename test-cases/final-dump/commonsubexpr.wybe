def common_subexpr(x:int) use !io {
    # there should only be one incr and one multiplication
    # this demonstrates reusing the incrs and decr, but also that
    # it understands that * is commutative.
    !println(incr(x) * decr(x) + decr(x) * incr(x))
    # the whole computation should be reused, but the prinln shouldn't
    # this also checks that the compiler knows that + is commutative.
    !println(decr(x) * incr(x) + incr(x) * decr(x))
    # and check that the compiler understands about inverting operations
    !println(incr(x) - decr(x) + decr(x))
}

!common_subexpr(10)
